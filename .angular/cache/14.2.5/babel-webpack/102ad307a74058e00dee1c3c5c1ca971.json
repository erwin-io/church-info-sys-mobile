{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AppConfigService = /*#__PURE__*/(() => {\n  class AppConfigService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    loadAppConfig() {\n      return new Promise(resolve => {\n        this.http.get(AppConfigService.configPath).pipe(take(1), catchError(err => throwError(err || 'Server error'))).subscribe(configResponse => {\n          this.appConfig = configResponse;\n          resolve(true);\n        });\n      });\n    } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n    get config() {\n      return this.appConfig;\n    }\n\n  }\n\n  AppConfigService.configPath = './assets/config/config.json';\n\n  AppConfigService.ɵfac = function AppConfigService_Factory(t) {\n    return new (t || AppConfigService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AppConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppConfigService,\n    factory: AppConfigService.ɵfac,\n    providedIn: 'root'\n  });\n  return AppConfigService;\n})();","map":null,"metadata":{},"sourceType":"module"}