{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { MyErrorStateMatcher } from 'src/app/core/form-validation/error-state.matcher';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"src/app/core/ui-service/page-loader.service\";\nimport * as i5 from \"src/app/core/storage/storage.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\n\nfunction PasswordAndSecurityPage_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Please enter your password \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordAndSecurityPage_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Password is incorrect \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordAndSecurityPage_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Please enter new password \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordAndSecurityPage_span_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Confirm Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordAndSecurityPage_span_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Password not match \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let PasswordAndSecurityPage = /*#__PURE__*/(() => {\n  class PasswordAndSecurityPage {\n    constructor(userService, formBuilder, alertController, pageLoaderService, storageService) {\n      this.userService = userService;\n      this.formBuilder = formBuilder;\n      this.alertController = alertController;\n      this.pageLoaderService = pageLoaderService;\n      this.storageService = storageService;\n      this.activeAditionalBackdrop = false;\n      this.isSubmitting = false;\n      this.matcher = new MyErrorStateMatcher();\n\n      this.checkPasswords = group => {\n        const pass = group.get('newPassword').value;\n        const confirmPass = group.get('confirmPassword').value;\n        return pass === confirmPass ? null : {\n          notSame: true\n        };\n      };\n\n      this.user = this.storageService.getLoginUser();\n    }\n\n    get formData() {\n      return Object.assign(Object.assign({}, this.changePasswordForm.value), {\n        userId: this.user.userId\n      });\n    }\n\n    get errorControls() {\n      return this.changePasswordForm.controls;\n    }\n\n    get notSameValueErrorHandler() {\n      return this.changePasswordForm.errors;\n    }\n\n    ngOnInit() {\n      console.log(this.user);\n      this.changePasswordForm = this.formBuilder.group({\n        currentPassword: [null, Validators.required],\n        newPassword: [null, Validators.required],\n        confirmPassword: ''\n      }, {\n        validators: this.checkPasswords\n      });\n      console.log(this.formData);\n    }\n\n    onSubmit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const params = this.formData;\n        console.log(params);\n\n        if (!this.changePasswordForm.valid) {\n          return;\n        }\n\n        try {\n          yield this.presentAlert({\n            header: 'Continue?',\n            message: 'Are you sure you want to change your password',\n            buttons: [{\n              text: 'CANCEL',\n              role: 'cancel'\n            }, {\n              text: 'YES Continue',\n              role: 'confirm',\n              handler: () => {\n                this.save(params);\n              }\n            }]\n          });\n        } catch (ex) {\n          this.isSubmitting = false;\n          yield this.pageLoaderService.close();\n          yield this.presentAlert({\n            header: 'Try again!',\n            message: Array.isArray(ex.message) ? ex.message[0] : ex.message,\n            buttons: ['OK']\n          });\n        }\n      });\n    }\n\n    save(params) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          yield this.pageLoaderService.open('Saving...');\n          this.isSubmitting = true;\n          this.userService.changePassword(params).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n            console.log(res);\n\n            if (res.success) {\n              yield this.pageLoaderService.close();\n              yield this.presentAlert({\n                header: 'Password changed!',\n                buttons: ['OK']\n              });\n              this.isSubmitting = false;\n              this.modal.dismiss(res.data, 'confirm');\n            } else {\n              this.isSubmitting = false;\n              yield this.pageLoaderService.close();\n              this.error = Array.isArray(res.message) ? res.message[0] : res.message;\n              yield this.presentAlert({\n                header: 'Try again!',\n                message: this.error,\n                buttons: ['OK']\n              });\n\n              if (this.error.toLowerCase().includes('password not match')) {\n                this.changePasswordForm.controls.currentPassword.setErrors({\n                  incorrectPassword: true\n                });\n              }\n            }\n          }), err => __awaiter(this, void 0, void 0, function* () {\n            this.isSubmitting = false;\n            yield this.pageLoaderService.close();\n            this.error = Array.isArray(err.message) ? err.message[0] : err.message;\n            yield this.presentAlert({\n              header: 'Try again!',\n              message: this.error,\n              buttons: ['OK']\n            });\n          }));\n        } catch (e) {\n          this.isSubmitting = false;\n          yield this.pageLoaderService.close();\n          this.error = Array.isArray(e.message) ? e.message[0] : e.message;\n          yield this.presentAlert({\n            header: 'Try again!',\n            message: this.error,\n            buttons: ['OK']\n          });\n        }\n      });\n    }\n\n    close() {\n      this.modal.dismiss(null, 'cancel');\n    }\n\n    presentAlert(options) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create(options);\n        return yield alert.present();\n      });\n    }\n\n  }\n\n  PasswordAndSecurityPage.ɵfac = function PasswordAndSecurityPage_Factory(t) {\n    return new (t || PasswordAndSecurityPage)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AlertController), i0.ɵɵdirectiveInject(i4.PageLoaderService), i0.ɵɵdirectiveInject(i5.StorageService));\n  };\n\n  PasswordAndSecurityPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PasswordAndSecurityPage,\n    selectors: [[\"app-password-and-security\"]],\n    decls: 49,\n    vars: 12,\n    consts: [[\"no-border\", \"\", \"no-shadow\", \"\"], [\"slot\", \"start\"], [3, \"click\"], [\"name\", \"chevron-back\"], [1, \"ion-text-center\"], [\"slot\", \"end\", 2, \"width\", \"48px\"], [1, \"ion-padding\"], [\"id\", \"petForm\", 3, \"formGroup\", \"ngSubmit\"], [3, \"disabled\"], [1, \"form-field-group\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Current Password\", \"formControlName\", \"currentPassword\", \"autocomplete\", \"new-currentPassword\"], [\"currentPassword\", \"\"], [\"matSuffix\", \"\", 1, \"icon-right\", 2, \"cursor\", \"pointer\", 3, \"click\"], [\"class\", \"error\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"newPassword\", \"autocomplete\", \"new-newPassword\"], [\"newPassword\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Confirm password\", \"formControlName\", \"confirmPassword\", \"autocomplete\", \"new-confirmPassword\", 3, \"errorStateMatcher\"], [\"confirmPassword\", \"\"], [1, \"controls-bottom\"], [\"type\", \"submit\", \"mat-flat-button\", \"\", \"color\", \"primary\", \"form\", \"petForm\", 3, \"disabled\"], [1, \"error\"]],\n    template: function PasswordAndSecurityPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1)(3, \"ion-button\", 2);\n        i0.ɵɵlistener(\"click\", function PasswordAndSecurityPage_Template_ion_button_click_3_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelement(4, \"ion-icon\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-title\", 4);\n        i0.ɵɵtext(6, \"Password and security\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"div\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"ion-content\", 6)(9, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function PasswordAndSecurityPage_Template_form_ngSubmit_9_listener() {\n          return ctx.changePasswordForm.valid ? ctx.onSubmit() : false;\n        });\n        i0.ɵɵelementStart(10, \"fieldset\", 8)(11, \"div\", 9)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Current Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 10)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Current Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11, 12);\n        i0.ɵɵelementStart(19, \"mat-icon\", 13);\n        i0.ɵɵlistener(\"click\", function PasswordAndSecurityPage_Template_mat_icon_click_19_listener() {\n          i0.ɵɵrestoreView(_r8);\n\n          const _r0 = i0.ɵɵreference(18);\n\n          return i0.ɵɵresetView(_r0.type = _r0.type === \"password\" ? \"text\" : \"password\");\n        });\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(21, PasswordAndSecurityPage_span_21_Template, 2, 0, \"span\", 14);\n        i0.ɵɵtemplate(22, PasswordAndSecurityPage_span_22_Template, 2, 0, \"span\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 9)(24, \"mat-label\");\n        i0.ɵɵtext(25, \"New Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\", 10)(27, \"mat-label\");\n        i0.ɵɵtext(28, \"New Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 15, 16);\n        i0.ɵɵelementStart(31, \"mat-icon\", 13);\n        i0.ɵɵlistener(\"click\", function PasswordAndSecurityPage_Template_mat_icon_click_31_listener() {\n          i0.ɵɵrestoreView(_r8);\n\n          const _r3 = i0.ɵɵreference(30);\n\n          return i0.ɵɵresetView(_r3.type = _r3.type === \"password\" ? \"text\" : \"password\");\n        });\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(33, PasswordAndSecurityPage_span_33_Template, 2, 0, \"span\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 9)(35, \"mat-label\");\n        i0.ɵɵtext(36, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"mat-form-field\", 10)(38, \"mat-label\");\n        i0.ɵɵtext(39, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 17, 18);\n        i0.ɵɵelementStart(42, \"mat-icon\", 13);\n        i0.ɵɵlistener(\"click\", function PasswordAndSecurityPage_Template_mat_icon_click_42_listener() {\n          i0.ɵɵrestoreView(_r8);\n\n          const _r5 = i0.ɵɵreference(41);\n\n          return i0.ɵɵresetView(_r5.type = _r5.type === \"password\" ? \"text\" : \"password\");\n        });\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(44, PasswordAndSecurityPage_span_44_Template, 2, 0, \"span\", 14);\n        i0.ɵɵtemplate(45, PasswordAndSecurityPage_span_45_Template, 2, 0, \"span\", 14);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(46, \"div\", 19)(47, \"ion-button\", 20);\n        i0.ɵɵtext(48, \"Update password\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(18);\n\n        const _r3 = i0.ɵɵreference(30);\n\n        const _r5 = i0.ɵɵreference(41);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.changePasswordForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmitting);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate(_r0.type === \"password\" ? \"visibility\" : \"visibility_off\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorControls.currentPassword.touched && ctx.errorControls.currentPassword.errors && ctx.errorControls.currentPassword.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorControls.currentPassword.touched && ctx.errorControls.currentPassword.errors && ctx.errorControls.currentPassword.errors.incorrectPassword);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate(_r3.type === \"password\" ? \"visibility\" : \"visibility_off\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorControls.newPassword.touched && ctx.errorControls.newPassword.errors && ctx.errorControls.newPassword.errors.required);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"errorStateMatcher\", ctx.matcher);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(_r5.type === \"password\" ? \"visibility\" : \"visibility_off\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorControls.confirmPassword.touched && ctx.errorControls.confirmPassword.errors && ctx.errorControls.confirmPassword.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorControls.confirmPassword.touched && ctx.notSameValueErrorHandler && ctx.notSameValueErrorHandler.notSame);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.changePasswordForm.valid || ctx.isSubmitting);\n      }\n    },\n    dependencies: [i6.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.IonButton, i3.IonButtons, i3.IonContent, i3.IonHeader, i3.IonIcon, i3.IonTitle, i3.IonToolbar, i7.MatIcon, i8.MatFormField, i8.MatLabel, i8.MatSuffix, i9.MatInput],\n    styles: [\"ion-header[_ngcontent-%COMP%]:after{background-image:none}.controls-bottom[_ngcontent-%COMP%]{position:relative;display:block;width:100%;background:#ffffff;padding:5px 10px;box-shadow:0 3px 10px #0003}.controls-bottom[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]{height:45px;font-size:15px;width:100%}\"]\n  });\n  return PasswordAndSecurityPage;\n})();","map":null,"metadata":{},"sourceType":"module"}