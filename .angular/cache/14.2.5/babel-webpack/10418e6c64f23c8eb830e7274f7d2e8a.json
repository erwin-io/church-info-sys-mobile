{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst IONSELECT_DISPLAY_DELAY_MS = 250;\n/* In milliseconds */\n\n/** Directive to force selected item in ionSelect component to be scrolled into view\r\n * Provides a workaround for issue #19296 (https://github.com/ionic-team/ionic-framework/issues/19296)\r\n */\n\nexport let IonselectAutoscrollDirective = /*#__PURE__*/(() => {\n  class IonselectAutoscrollDirective {\n    onClick() {\n      /* HACK ALERT!  Previous versions of Ionic allowed you to subscribe to events on the popover overlay via:\r\n          selectControl._overlay.didEnter.subscribe(() => {...}\r\n        You could then use setTimeout() without a delay to allow just one cycle before scrolling the list.  This\r\n        is no longer available, so we're going to have to use a short delay and hope that that's enough time\r\n        for the list to be instantiated.\r\n              This is also working on the assumption that only one set of options can be displayed at a time since we\r\n        have to search for elements on the document because they're not children of (or linked by id/attribute to)\r\n        the ion-select element.\r\n      */\n      setTimeout(() => {\n        /* Unfortunately, the different ionSelect interfaces decorate their items with different classes and use\r\n          different ways to identify the selected item:\r\n            * alert - uses the `select-interface-option` class on the button and the `aria-checked` attribute to\r\n              mark the selected item\r\n            * action-sheet - also uses the `select-interface-option` class on the button but uses the\r\n              `action-sheet-selected` class to mark the selected item\r\n            * popover - uses the `sc-ion-select-popover` class on the `ion-radio` element and the `aria-checked`\r\n              attribute to mark the selected item\r\n          So it's simpler to look for the different classes to identify each interface instead.\r\n        */\n        let selectedOption = null;\n        let options = document.getElementsByClassName('action-sheet-button');\n\n        if (options.length > 0) {\n          for (const option of options) {\n            if (option.classList.contains('action-sheet-selected')) {\n              selectedOption = option;\n              break;\n            }\n          }\n        } else {\n          options = document.getElementsByClassName('alert-radio-button');\n\n          if (options.length === 0) {\n            options = document.getElementsByClassName('sc-ion-select-popover');\n          }\n\n          for (const option of options) {\n            const attribute = option.attributes.getNamedItem('aria-checked');\n\n            if (attribute && attribute.value === 'true') {\n              selectedOption = option;\n              break;\n            }\n          }\n        }\n\n        if (selectedOption) {\n          selectedOption.scrollIntoView({\n            block: 'center'\n          });\n        }\n      }, IONSELECT_DISPLAY_DELAY_MS);\n    }\n\n  }\n\n  IonselectAutoscrollDirective.ɵfac = function IonselectAutoscrollDirective_Factory(t) {\n    return new (t || IonselectAutoscrollDirective)();\n  };\n\n  IonselectAutoscrollDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: IonselectAutoscrollDirective,\n    selectors: [[\"ion-select\"]],\n    hostBindings: function IonselectAutoscrollDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function IonselectAutoscrollDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    }\n  });\n  return IonselectAutoscrollDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}