{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let StorageService = /*#__PURE__*/(() => {\n  class StorageService {\n    constructor() {}\n\n    getLoginUser() {\n      const user = this.get('loginUser');\n\n      if (user !== null && user !== '') {\n        return JSON.parse(user);\n      } else {\n        return null;\n      }\n    }\n\n    saveLoginUser(value) {\n      return this.set('loginUser', JSON.stringify(value));\n    }\n\n    getAccessToken() {\n      return this.get('accessToken');\n    }\n\n    saveAccessToken(value) {\n      return this.set('accessToken', value);\n    }\n\n    getRefreshToken() {\n      return this.get('refreshToken');\n    }\n\n    saveRefreshToken(value) {\n      return this.set('refreshToken', value);\n    }\n\n    getTotalUnreadNotif() {\n      return this.get('totalUnreadNotif');\n    }\n\n    saveTotalUnreadNotif(value) {\n      return this.set('totalUnreadNotif', value);\n    }\n\n    getSessionExpiredDate() {\n      return this.get('sessionExpiredDate');\n    }\n\n    saveSessionExpiredDate(value) {\n      return this.set('sessionExpiredDate', value);\n    }\n\n    getThemeIsDarkMode() {\n      return this.get('themeIsDarkMode') && this.get('themeIsDarkMode').toLowerCase().includes('true');\n    }\n\n    saveThemeIsDarkMode(value) {\n      return this.set('themeIsDarkMode', value);\n    }\n\n    set(key, value) {\n      localStorage.setItem(key, value);\n    }\n\n    get(key) {\n      return localStorage.getItem(key);\n    }\n\n  }\n\n  StorageService.ɵfac = function StorageService_Factory(t) {\n    return new (t || StorageService)();\n  };\n\n  StorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageService,\n    factory: StorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return StorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}