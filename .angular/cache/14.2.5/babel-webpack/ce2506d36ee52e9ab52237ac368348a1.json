{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../core/services/auth.service\";\nimport * as i4 from \"src/app/core/services/user.service\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"../../../core/storage/storage.service\";\nimport * as i7 from \"src/app/core/ui-service/loader.service\";\nimport * as i8 from \"src/app/core/services/app-config.service\";\nimport * as i9 from \"src/app/core/ui-service/page-loader.service\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/checkbox\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"@angular/material/form-field\";\nimport * as i14 from \"@angular/material/input\";\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(formBuilder, router, route, authService, userService, alertController, storageService, loaderService, appconfig, pageLoaderService) {\n      // this.route.queryParams\n      //   .subscribe(params => {\n      //     console.log(params);\n      //     this.enableBackToHome = params.ref.includes('home');\n      //   }\n      // );\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.route = route;\n      this.authService = authService;\n      this.userService = userService;\n      this.alertController = alertController;\n      this.storageService = storageService;\n      this.loaderService = loaderService;\n      this.appconfig = appconfig;\n      this.pageLoaderService = pageLoaderService;\n      this.isSubmitting = false;\n      this.enableBackToHome = false;\n      this.sessionTimeout = Number(this.appconfig.config.sessionConfig.sessionTimeout);\n    }\n\n    get formData() {\n      return this.loginForm.value;\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        username: [null, Validators.required],\n        password: [null, Validators.required],\n        rememberMe: [false]\n      });\n    }\n\n    onFormSubmit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (!this.loginForm.valid) {\n          return;\n        }\n\n        try {\n          const params = this.formData;\n          this.isSubmitting = true;\n          yield this.pageLoaderService.open('Signing in please wait...');\n          this.authService.login(params).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n            if (res.success) {\n              if (this.appconfig.config.auth.requireOTP === true && !res.data.isVerified) {\n                const navigationExtras = {\n                  state: {\n                    data: {\n                      userId: res.data.userId\n                    }\n                  }\n                };\n                this.router.navigate(['/verify-otp'], navigationExtras);\n              } else {\n                this.storageService.saveRefreshToken(res.data.accessToken);\n                this.storageService.saveAccessToken(res.data.refreshToken);\n                this.storageService.saveTotalUnreadNotif(res.data.totalUnreadNotif);\n                const today = new Date();\n                today.setTime(today.getTime() + this.sessionTimeout * 1000);\n                this.storageService.saveSessionExpiredDate(today);\n                const userData = res.data;\n                this.storageService.saveLoginUser(userData);\n                this.router.navigate(['/'], {\n                  replaceUrl: true\n                });\n                this.isSubmitting = false;\n                yield this.pageLoaderService.close();\n              }\n            } else {\n              this.isSubmitting = false;\n              yield this.presentAlert({\n                header: 'Try again!',\n                message: Array.isArray(res.message) ? res.message[0] : res.message,\n                buttons: ['OK']\n              });\n            }\n          }), err => __awaiter(this, void 0, void 0, function* () {\n            console.log(err);\n            this.isSubmitting = false;\n            yield this.pageLoaderService.close();\n            yield this.presentAlert({\n              header: 'Try again!',\n              subHeader: '',\n              message: Array.isArray(err.message) ? err.message[0] : err.message,\n              buttons: ['OK']\n            });\n          }));\n        } catch (e) {\n          console.log(e);\n          yield this.pageLoaderService.close();\n          this.isSubmitting = false;\n          yield this.presentAlert({\n            header: 'Try again!',\n            subHeader: '',\n            message: Array.isArray(e.message) ? e.message[0] : e.message,\n            buttons: ['OK']\n          });\n        }\n      });\n    }\n\n    presentAlert(options) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create(options);\n        yield alert.present();\n      });\n    }\n\n  }\n\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.AlertController), i0.ɵɵdirectiveInject(i6.StorageService), i0.ɵɵdirectiveInject(i7.LoaderService), i0.ɵɵdirectiveInject(i8.AppConfigService), i0.ɵɵdirectiveInject(i9.PageLoaderService));\n  };\n\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 37,\n    vars: 4,\n    consts: [[1, \"login\", \"container\"], [1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [3, \"disabled\"], [1, \"form-field-group\"], [1, \"app_banner\"], [1, \"image-container\"], [\"src\", \"../../../../assets/img/app_banner.png\"], [1, \"login-text\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Username\", \"formControlName\", \"username\", \"autocapitalize\", \"none\", \"oninput\", \"this.value = this.value.toLowerCase()\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"password\", \"\"], [\"matSuffix\", \"\", 1, \"icon-right\", 2, \"cursor\", \"pointer\", 3, \"click\"], [\"formControlName\", \"rememberMe\", \"color\", \"primary\", 3, \"disabled\"], [1, \"action\"], [\"type\", \"submit\", \"mat-flat-button\", \"\", \"color\", \"primary\"], [\"routerLink\", \"/\", \"mat-stroked-button\", \"\", \"color\", \"primary\"], [1, \"login-footer\"], [\"routerLink\", \"/signup\", \"replaceUrl\", \"true\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"ion-content\")(1, \"div\", 0)(2, \"div\", 1)(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_3_listener() {\n          return ctx.onFormSubmit();\n        });\n        i0.ɵɵelementStart(4, \"fieldset\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6);\n        i0.ɵɵelement(8, \"img\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"span\", 8);\n        i0.ɵɵtext(10, \"Log into your account\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"mat-form-field\", 9)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"mat-form-field\", 9)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 11, 12);\n        i0.ɵɵelementStart(22, \"mat-icon\", 13);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_mat_icon_click_22_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(21);\n\n          return i0.ɵɵresetView(_r0.type = _r0.type === \"password\" ? \"text\" : \"password\");\n        });\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 4)(25, \"mat-checkbox\", 14);\n        i0.ɵɵtext(26, \"Remember me\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 15)(28, \"button\", 16);\n        i0.ɵɵtext(29, \"Log In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 17);\n        i0.ɵɵtext(31, \"Back to home\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(32, \"div\", 18)(33, \"span\");\n        i0.ɵɵtext(34, \"Don't have an account? \");\n        i0.ɵɵelementStart(35, \"a\", 19);\n        i0.ɵɵtext(36, \"Sign up\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(21);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmitting);\n        i0.ɵɵadvance(19);\n        i0.ɵɵtextInterpolate(_r0.type === \"password\" ? \"visibility\" : \"visibility_off\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmitting);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.IonContent, i5.RouterLinkDelegate, i5.RouterLinkWithHrefDelegate, i2.RouterLink, i2.RouterLinkWithHref, i10.MatButton, i11.MatCheckbox, i12.MatIcon, i13.MatFormField, i13.MatLabel, i13.MatSuffix, i14.MatInput],\n    styles: [\".container{height:100%;display:flex;padding:0 40px!important}.container.login{flex-direction:column;justify-content:flex-start!important}.container.login .welcome{text-transform:uppercase;white-space:pre;overflow:visible;font-weight:400;font-style:normal;font-family:Sumana,serif;color:#247881;font-size:23px;letter-spacing:0px;line-height:1.2;text-align:center;margin:0 0 25px!important}.container.login .app_banner{display:flex;flex-grow:1;height:104px;justify-content:center;margin-bottom:57px!important}.container.login .app_banner .image-container{width:299px;display:flex;justify-content:center}.container.login .app_banner .image-container img{height:100%;background-repeat:no-repeat;background-position:center center;background-size:cover}.container.login .login-text{text-align:center}.container.login span,.container.login input{font-size:16px;letter-spacing:0px;line-height:1.2}.container.login .form-container{display:flex;flex-grow:1;flex-direction:row;justify-content:center;align-items:center}.container.login .form-container .action{flex-grow:1;display:flex;flex-direction:column;row-gap:5px}.container.login .form-container .action *{flex-grow:1}.container.login .form-container .action button{height:53px;font-size:16px;letter-spacing:0px;line-height:1.2}.container.login .login-footer{display:flex;align-items:center;flex-direction:column;height:103px;justify-content:flex-end;padding:20px 0}.container.login .login-footer *{color:#000!important}.container.login .login-footer a{text-decoration:underline}\\n\"],\n    encapsulation: 2\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module"}